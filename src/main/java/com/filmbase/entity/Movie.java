package com.filmbase.entity;

import jakarta.persistence.*;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

/**
 * Represents a movie entity in the system.
 * This entity stores comprehensive information about a movie,
 * including metadata, cast information, ratings, languages, subtitles, and more.
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Entity
@Table(name = "movies")
public class Movie {

    /**
     * Unique identifier for the movie.
     * Auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long movieId;

    /**
     * The title of the movie.
     * This field must be unique and is required.
     */
    @NotBlank(message = "Movie title is required")
    @Column(nullable = false, length = 200, unique = true)
    private String title;

    /**
     * Name of the movie's director.
     * This field is required.
     */
    @NotBlank(message = "Director name is required")
    @Column(nullable = false)
    private String director;

    /**
     * The genre of the movie (e.g., Action, Comedy, Drama).
     * This field is required.
     */
    @NotBlank(message = "Genre is required")
    @Column(nullable = false, length = 100)
    private String genre;

    /**
     * A brief description or summary of the movie.
     * Stored as TEXT in the database.
     */
    @Column(columnDefinition = "TEXT")
    private String description;

    /**
     * Language of the movie (e.g., English, French).
     * This field is required.
     */
    @NotBlank(message = "Language is required")
    @Column(nullable = false, length = 50)
    private String language;

    /**
     * The duration of the movie in minutes.
     * Must be at least 1 minute and is required.
     */
    @NotNull(message = "Duration is required")
    @Min(value = 1, message = "Duration must be at least 1 minute")
    @Column(nullable = false)
    private Integer duration;

    /**
     * The studio responsible for producing the movie.
     * This field is required.
     */
    @NotBlank(message = "Studio is required")
    @Column(nullable = false)
    private String studio;

    /**
     * The rating of the movie (e.g., IMDB rating out of 10).
     * Must be between 0 and 10.
     */
    @NotNull(message = "Rating is required")
    @Min(value = 0, message = "Rating cannot be less than 0")
    @Max(value = 10, message = "Rating cannot be more than 10")
    @Column(nullable = false)
    private Double rating;

    /**
     * A set of actors/actresses who performed in the movie.
     * Stored as a separate table (movie_cast) with a relationship to the movie.
     */
    @ElementCollection
    @CollectionTable(name = "movie_cast", joinColumns = @JoinColumn(name = "movie_id"))
    private Set<String> movieCast = new HashSet<>();

    /**
     * The country where the movie was produced.
     * This field is required.
     */
    @NotBlank(message = "Country of origin is required")
    @Column(name = "country_of_origin", nullable = false)
    private String countryOfOrigin;

    /**
     * A set of available languages (dubbing) for the movie.
     * Stored as a separate table (movie_languages) with a relationship to the movie.
     */
    @ElementCollection
    @CollectionTable(name = "movie_languages", joinColumns = @JoinColumn(name = "movie_id"))
    private Set<String> availableLanguages = new HashSet<>();

    /**
     * A set of subtitle languages available for the movie.
     * Stored as a separate table (movie_subtitles) with a relationship to the movie.
     */
    @ElementCollection
    @CollectionTable(name = "movie_subtitles", joinColumns = @JoinColumn(name = "movie_id"))
    private Set<String> subtitleLanguages = new HashSet<>();

    /**
     * The official release year of the movie.
     * This field is required.
     */
    @NotNull(message = "Release year is required")
    @Column(nullable = false)
    private Integer releaseYear;

    /**
     * URL or path to the movie's poster image.
     * This field is required.
     */
    @NotBlank(message = "Movie poster is required")
    @Column(nullable = false)
    private String poster;

    /**
     * The box office revenue of the movie in dollars.
     */
    private Long boxOfficeRevenue;

    /**
     * The production company responsible for the movie.
     * This field is required.
     */
    @NotBlank(message = "Production company is required")
    @Column(nullable = false)
    private String productionCompany;

    /**
     * The age rating of the movie (e.g., PG, PG-13, R).
     * This field is required.
     */
    @NotBlank(message = "Age rating is required")
    @Column(nullable = false)
    private String ageRating;

    /**
     * A set of keywords associated with the movie for search and categorization.
     */
    @ElementCollection
    @CollectionTable(name = "movie_keywords", joinColumns = @JoinColumn(name = "movie_id"))
    private Set<String> keywords = new HashSet<>();

    /**
     * URL for the movie's trailer.
     */
    private String trailerUrl;

    /**
     * The official release date of the movie.
     * This field is required.
     */
    @NotNull(message = "Release date is required")
    @Column(nullable = false)
    private LocalDate releaseDate;
}
    